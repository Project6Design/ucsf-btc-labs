!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.CKEditor5=e():(t.CKEditor5=t.CKEditor5||{},t.CKEditor5.drupalFile=e())}(self,(()=>(()=>{var t={"ckeditor5/src/core.js":(t,e,i)=>{t.exports=i("dll-reference CKEditor5.dll")("./src/core.js")},"ckeditor5/src/typing.js":(t,e,i)=>{t.exports=i("dll-reference CKEditor5.dll")("./src/typing.js")},"ckeditor5/src/ui.js":(t,e,i)=>{t.exports=i("dll-reference CKEditor5.dll")("./src/ui.js")},"ckeditor5/src/utils.js":(t,e,i)=>{t.exports=i("dll-reference CKEditor5.dll")("./src/utils.js")},"dll-reference CKEditor5.dll":t=>{"use strict";t.exports=CKEditor5.dll}},e={};function i(n){var r=e[n];if(void 0!==r)return r.exports;var l=e[n]={exports:{}};return t[n](l,l.exports,i),l.exports}i.d=(t,e)=>{for(var n in e)i.o(e,n)&&!i.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},i.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e);var n={};return(()=>{"use strict";i.d(n,{default:()=>f});var t=i("ckeditor5/src/core.js");const e='<svg viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg"><path d="M12.502 7h-5c-.276 0-.502-.225-.502-.5v-5c0-.275-.225-.5-.5-.5h-3c-.275 0-.5.225-.5.5v12.029c0 .275.225.5.5.5h9.002c.275 0 .5-.225.5-.5v-6.029c0-.275-.225-.5-.5-.5zM8.502 6h4c.275 0 .34-.159.146-.354l-4.293-4.292c-.195-.195-.353-.129-.353.146v4c0 .275.225.5.5.5z" /></svg>\n';var r=i("ckeditor5/src/ui.js");class l extends t.Plugin{static get pluginName(){return"DrupalInsertFile"}init(){const{editor:t}=this,i=t.config.get("drupalFileUpload");this.editor.plugins.get("LinkUI")._createViews&&t.plugins.get("LinkUI")._createViews(),t.ui.componentFactory.add("drupalInsertFile",(n=>{const l=new r.ButtonView(this.locale),o=t.commands.get("insertFileToEditor");return l.set({icon:e,label:Drupal.t("Insert file"),tooltip:!0}),l.bind("isOn").to(o,"value"),l.bind("isEnabled").to(o,"isEnabled"),l.on("execute",(()=>{const e=t.plugins.get("LinkUI")._getSelectedLinkElement();let n={};e&&(n={"data-entity-uuid":e.getAttribute("data-entity-uuid"),"data-entity-type":e.getAttribute("data-entity-type")}),this.openDialog(Drupal.url("editor_file/dialog/file/"+i.format),n,(({attributes:e})=>{t.execute("insertFileToEditor",e)}))})),l}))}openDialog(t,e,i,n={}){const r=n.dialogClass?n.dialogClass.split(" "):[];r.push("ui-dialog--narrow"),n.dialogClass=r.join(" "),n.autoResize=window.matchMedia("(min-width: 600px)").matches,n.width="auto";Drupal.ajax({dialog:n,dialogType:"modal",selector:".ckeditor5-dialog-loading-link",url:t,progress:{type:"fullscreen"},submit:{editor_object:e}}).execute(),Drupal.ckeditor5.saveCallback=i}}const o=l;var s=i("ckeditor5/src/typing.js"),a=i("ckeditor5/src/utils.js");class d extends t.Command{refresh(){const t=this.editor.model,e=t.document.selection,i=e.getSelectedElement()||(0,a.first)(e.getSelectedBlocks());this.isLinkableElement(i,t.schema)?(this.value="file"===i.getAttribute("fileDataEntityType"),this.isEnabled=t.schema.checkAttribute(i,"linkHref")):(this.value="file"===e.getAttribute("fileDataEntityType"),this.isEnabled=t.schema.checkAttributeInSelection(e,"linkHref"))}execute(t){const e=this.editor.model;e.change((i=>{this.updateFileLink(i,e,t)}))}updateFileLink(t,e,i={}){const n=e.document.selection,r={linkHref:"href",fileDataEntityType:"data-entity-type",fileDataEntityUuid:"data-entity-uuid"};if(n.hasAttribute("linkHref")){const l=n.getFirstPosition();Object.entries(r).forEach((([r,o])=>{const a=(0,s.findAttributeRange)(l,r,n.getAttribute(r),e);console.log(a),t.setAttribute(r,i[o],a)}))}else{let l;const o=n.getFirstRange();for(const t of o.getItems())l=t.data;const s={};Object.entries(r).forEach((([t,e])=>{s[t]=i[e]}));const a=l||i.filename,d=t.createText(a,s);e.insertContent(d),d.parent&&t.setSelection(d,"on")}}isLinkableElement(t,e){return!!t&&e.checkAttribute(t.name,"linkHref")}}const u=d;class c extends t.Plugin{static get requires(){return[o]}static get pluginName(){return"FileUploadEditing"}init(){const t=this.editor,e=t.model.schema,i=t.conversion;e.extend("$text",{allowAttributes:["fileDataEntityType","fileDataEntityUuid"]}),t.commands.add("insertFileToEditor",new u(t)),i.for("upcast").attributeToAttribute({view:{name:"a",key:"data-entity-uuid"},model:{key:"fileDataEntityUuid",value:t=>!1===("file"===t.getAttribute("data-entity-type"))?null:t.getAttribute("data-entity-uuid")}}).attributeToAttribute({view:{name:"a",key:"data-entity-type"},model:{key:"fileDataEntityType",value:t=>!1===("file"===t.getAttribute("data-entity-type"))?null:t.getAttribute("data-entity-type")}}),i.for("downcast").attributeToElement({model:"fileDataEntityType",view:(t,{writer:e})=>{const i=e.createAttributeElement("a",{"data-entity-type":t},{priority:5});return e.setCustomProperty("link",!0,i),i}}).attributeToElement({model:"fileDataEntityUuid",view:(t,{writer:e})=>{const i=e.createAttributeElement("a",{"data-entity-uuid":t},{priority:5});return e.setCustomProperty("link",!0,i),i}})}}class p extends t.Plugin{static get requires(){return["LinkEditing","LinkUI","FileUploadEditing"]}static get pluginName(){return"DrupalEditorFileUploadActionUi"}init(){const t=this.editor;this.linkUI=t.plugins.get("LinkUI"),this.fileEditButton=this._createEditButton()}afterInit(){this.linkUI.actionsView.once("render",(()=>{this.fileEditButton.render(),this.linkUI.actionsView.registerChild(this.fileEditButton),this.linkUI.actionsView.element.insertBefore(this.fileEditButton.element,this.linkUI.actionsView.unlinkButtonView.element);const t=this.editor.commands.get("insertFileToEditor");this.fileEditButton.bind("isVisible").to(t,"value"),this.linkUI.actionsView.editButtonView.bind("isVisible").to(t,"value",(t=>!1===t)),this.linkUI.actionsView.unlinkButtonView.bind("isVisible").to(t,"value",(t=>!1===t))}))}_createEditButton(){const t=new r.ButtonView(this.locale);return t.set({icon:e,label:Drupal.t("Edit File"),tooltip:!0}),t.on("execute",this.openEditingDialog.bind(this)),t}openEditingDialog(){const{editor:t}=this,e=this.linkUI._getSelectedLinkElement();if(!e)return;const i=e.hasAttribute("data-entity-uuid")?{"data-entity-uuid":e.getAttribute("data-entity-uuid"),"data-entity-type":e.getAttribute("data-entity-type")}:{},n=t.config.get("drupalFileUpload");t.plugins.get("DrupalInsertFile").openDialog(Drupal.url("editor_file/dialog/file/"+n.format),i,(({attributes:e})=>{t.execute("insertFileToEditor",e)}))}}class g extends t.Plugin{static get requires(){return[c,p]}static get pluginName(){return"DrupalFile"}}const f={DrupalFile:g,DrupalInsertFile:o}})(),n=n.default})()));